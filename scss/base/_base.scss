@use "../utils/" as *;
.container {
    @include toRem(max-width, 100%);
    @include toRem(padding-inline-start, 15);
    @include toRem(padding-inline-end, 15);
    margin: auto;
    @include respond-above(sm) {
        @include toRem(max-width, 576);
    }
    @include respond-above(md) {
        @include toRem(max-width, 720);
    }
    @include respond-above(lg) {
        @include toRem(max-width, 960);
    }
    @include respond-above(xl) {
        @include toRem(max-width, 1140);
    }
    @include respond-above(xxl) {
        @include toRem(max-width, 1320);
    }
}

.container-inner {
    @include toRem(max-width, 1200);
    @include toRem(padding-inline, 15);
    margin-inline: auto;
}

.section {
    position: relative;
    @include respond-above(xs) {
        @include toRem(padding-block-start, 30);
        &__heading {
            @include flexContainer(row, center, center);
            @include toRem(margin-block-end, 20);
            .title {
                @include toRem(font-size, 28);
                color: var(--color-secondary);
                font-family: "SSPro-Semibold";
            }
        }
    }
    @include respond-above(sm) {
        @include toRem(padding-block-start, 50);
        &__heading {
            .title {
                @include toRem(font-size, 35);    
            }
        }
    }
    @include respond-above(md) {
        @include toRem(padding-block-start, 100);
        &__heading {
            .title {
                @include toRem(font-size, 45);    
            }
        }
    }
}

[data-message="msg"] {
    position: fixed;
    @include toRem(top, 20);
    @include toRem(right, -400);
    z-index: 9999;
    opacity: 0;
    visibility: hidden;
    @include transition(right .3s);
    p {
        position: relative;
        background: red;
        color: var(--color-white);
        padding: 10px 20px;
        &:not(:first-child) {
            @include toRem(margin-block-start, 20);
        }
    }
    &:is(.show) {
        opacity: 1;
        visibility: visible;
        @include toRem(right, 20);
    }
}

@-webkit-keyframes slide-down {
    0% {
      opacity: 0;
      -webkit-transform: translateY(-100%);
      transform: translateY(-100%);
    }
    100% {
      opacity: 0.9;
      -webkit-transform: translateY(0);
      transform: translateY(0);
    }
}

@keyframes slide-down {
    0% {
        opacity: 0;
        -webkit-transform: translateY(-100%);
        transform: translateY(-100%);
    }
    100% {
        opacity: 0.9;
        -webkit-transform: translateY(0);
        transform: translateY(0);
    }
}

@-webkit-keyframes slideIn {
    from {
    }
    to {
        -webkit-transform: translateX(0);
                transform: translateX(0);
    }
}

@keyframes slideIn {
    from {
    }
    to {
        -webkit-transform: translateX(0);
                transform: translateX(0);
    }
}

.theme_btn-mode {
    position: fixed;
    @include toRem(bottom, 30);
    @include toRem(right, 30);
    @include toRem(width, 60);
    @include toRem(height, 60);
    background-color: var(--color-secondary);
    @include border-radius(60px);
    border: 4px solid var(--color-secondary);
    @include transition(.3s all ease-in-out);
    span {
        position: relative;
        width: 100%;
        height: 100%;
        @include flexContainer(row, center, center);
        &::before {
            content: 'Dark';
            position: absolute;
            width: 50%;
            left: 0;
            top: 0;
            bottom: 0;
            @include border-radius(0 30px 30px 0);
            @include flexContainer(row, center, center);
            background-color: #000;
            @include toRem(font-size, 13);
            color: $white;
            writing-mode: vertical-lr;
            text-orientation: mixed;
            @include transform(rotate(180deg));
        }
        &::after {
            content: 'Light';
            position: absolute;
            width: 50%;
            right: 0;
            top: 0;
            bottom: 0;
            @include border-radius(0 30px 30px 0);
            @include flexContainer(row, center, center);
            background-color: $white;
            @include toRem(font-size, 13);
            writing-mode: vertical-lr;
            text-orientation: mixed;
        }
    }
}
.dark {
    figcaption {
        .text {
            p {
                color: $white !important;
            }
        }
    }
    .theme_btn-mode {
        @include transform(rotate(90deg));
    }
}
.light {
    .theme_btn-mode {
        @include transform(rotate(-90deg));
    }
}